// This is the public API offered by your entity.
syntax = "proto3";

package acmeapis.example.counter.v1;

import 'flakkaapi/entity_api.proto';
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";

option (flakkaapi.entity_api) = {instance_service: "acmeapis.example.counter.v1.CounterService"};

message IncreaseValue {
  int32 value = 2;
}

message DecreaseValue {
  int32 value = 2;
}

message ResetValue {}

message GetCounter {}

message CurrentCounter {
  int32 value = 1;
}

service CounterService {

  rpc Increase(IncreaseValue) returns (google.protobuf.Empty);
  rpc IncreaseWithSideEffect(IncreaseValue) returns (google.protobuf.Empty);
  rpc IncreaseWithConditional(IncreaseValue) returns (google.protobuf.Empty);
  rpc Decrease(DecreaseValue) returns (google.protobuf.Empty);
  rpc Reset(ResetValue) returns (google.protobuf.Empty);
  rpc GetCurrentCounter(GetCounter) returns (CurrentCounter);
}
